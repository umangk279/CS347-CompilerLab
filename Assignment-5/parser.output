Terminals unused in grammar

   PRINT
   MOD


State 69 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt_list stmt
    3          | %empty

    4 stmt: RETURN SEMI
    5     | RETURN bool_conditions SEMI
    6     | BREAK SEMI
    7     | CONTINUE SEMI
    8     | var_dec SEMI
    9     | func_dec
   10     | if_block
   11     | loop_block
   12     | stmt_block
   13     | switch_case_statement
   14     | assignment SEMI
   15     | SEMI

   16 var_dec: type var_list

   17 var_list: var_list COMMA decl_id_array
   18         | decl_id_array

   19 func_dec: func_header left_curly stmt_list right_curly

   20 func_header: func_type_id LB func_params RB

   21 func_type_id: type ID

   22 func_params: param_decl
   23            | %empty

   24 param_decl: param_decl COMMA decl
   25           | decl

   26 decl: type ID
   27     | type ID LSQ RSQ

   28 type: INT
   29     | FLOAT
   30     | VOID

   31 if_block: if_condition stmt ELSE stmt
   32         | if_condition stmt

   33 if_condition: IF LB assignment RB

   34 loop_block: while_condition stmt
   35           | for_condition stmt

   36 while_condition: WHILE LB assignment RB

   37 for_condition: FOR LB assignment SEMI assignment SEMI assignment RB

   38 stmt_block: left_curly stmt_list right_curly

   39 switch_case_statement: SWITCH LB operation RB LCURLY case_statement_block RCURLY

   40 case_statement_block: case_list default_statemnt
   41                     | case_list

   42 case_list: case_list case_statement
   43          | case_statement

   44 case_statement: CASE c operation COLON d d stmt

   45 c: %empty

   46 d: %empty

   47 default_statemnt: DEFAULT COLON c stmt

   48 assignment: id_array ASSIGN bool_conditions
   49           | bool_conditions

   50 bool_conditions: bool_conditions AND condition
   51                | bool_conditions OR condition
   52                | condition

   53 condition: comparison
   54          | operation

   55 comparison: operation GT operation
   56           | operation GTE operation
   57           | operation LT operation
   58           | operation LTE operation
   59           | operation EQ operation
   60           | operation NEQ operation

   61 operation: operation PLUS term
   62          | operation MINUS term
   63          | term

   64 term: term MULTIPLY factor
   65     | term DIVIDE factor
   66     | factor

   67 factor: unary_expression

   68 unary_expression: expression
   69                 | NOT unary_expression
   70                 | MINUS unary_expression
   71                 | DECREMENT unary_expression
   72                 | INCREMENT unary_expression

   73 expression: NUM_FLOAT
   74           | NUM_INT
   75           | id_array
   76           | LB bool_conditions RB

   77 decl_id_array: ID
   78              | ID LSQ NUM_INT RSQ

   79 id_array: ID
   80         | ID LSQ NUM_INT RSQ

   81 left_curly: LCURLY

   82 right_curly: RCURLY


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 28
FLOAT (259) 29
VOID (260) 30
IF (261) 33
ELSE (262) 31
FOR (263) 37
WHILE (264) 36
BREAK (265) 6
CONTINUE (266) 7
SWITCH (267) 39
CASE (268) 44
DEFAULT (269) 47
RETURN (270) 4 5
PRINT (271)
PLUS (272) 61
MINUS (273) 62 70
MULTIPLY (274) 64
DIVIDE (275) 65
MOD (276)
ASSIGN (277) 48
OR (278) 51
AND (279) 50
NOT (280) 69
SEMI (281) 4 5 6 7 8 14 15 37
COMMA (282) 17 24
COLON (283) 44 47
LT (284) 57
GT (285) 55
LTE (286) 58
GTE (287) 56
EQ (288) 59
NEQ (289) 60
LB (290) 20 33 36 37 39 76
RB (291) 20 33 36 37 39 76
LSQ (292) 27 78 80
RSQ (293) 27 78 80
LCURLY (294) 39 81
RCURLY (295) 39 82
INCREMENT (296) 72
DECREMENT (297) 71
ID (298) 21 26 27 77 78 79 80
NUM_INT (299) 74 78 80
NUM_FLOAT (300) 73


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
prog (47)
    on left: 1, on right: 0
stmt_list (48)
    on left: 2 3, on right: 1 2 19 38
stmt (49)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15, on right: 2 31 32 34 35
    44 47
var_dec (50)
    on left: 16, on right: 8
var_list (51)
    on left: 17 18, on right: 16 17
func_dec (52)
    on left: 19, on right: 9
func_header (53)
    on left: 20, on right: 19
func_type_id (54)
    on left: 21, on right: 20
func_params (55)
    on left: 22 23, on right: 20
param_decl (56)
    on left: 24 25, on right: 22 24
decl (57)
    on left: 26 27, on right: 24 25
type (58)
    on left: 28 29 30, on right: 16 21 26 27
if_block (59)
    on left: 31 32, on right: 10
if_condition (60)
    on left: 33, on right: 31 32
loop_block (61)
    on left: 34 35, on right: 11
while_condition (62)
    on left: 36, on right: 34
for_condition (63)
    on left: 37, on right: 35
stmt_block (64)
    on left: 38, on right: 12
switch_case_statement (65)
    on left: 39, on right: 13
case_statement_block (66)
    on left: 40 41, on right: 39
case_list (67)
    on left: 42 43, on right: 40 41 42
case_statement (68)
    on left: 44, on right: 42 43
c (69)
    on left: 45, on right: 44 47
d (70)
    on left: 46, on right: 44
default_statemnt (71)
    on left: 47, on right: 40
assignment (72)
    on left: 48 49, on right: 14 33 36 37
bool_conditions (73)
    on left: 50 51 52, on right: 5 48 49 50 51 76
condition (74)
    on left: 53 54, on right: 50 51 52
comparison (75)
    on left: 55 56 57 58 59 60, on right: 53
operation (76)
    on left: 61 62 63, on right: 39 44 54 55 56 57 58 59 60 61 62
term (77)
    on left: 64 65 66, on right: 61 62 63 64 65
factor (78)
    on left: 67, on right: 64 65 66
unary_expression (79)
    on left: 68 69 70 71 72, on right: 67 69 70 71 72
expression (80)
    on left: 73 74 75 76, on right: 68
decl_id_array (81)
    on left: 77 78, on right: 17 18
id_array (82)
    on left: 79 80, on right: 48 75
left_curly (83)
    on left: 81, on right: 19 38
right_curly (84)
    on left: 82, on right: 19 38


State 0

    0 $accept: . prog $end

    $default  reduce using rule 3 (stmt_list)

    prog       go to state 1
    stmt_list  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: stmt_list .
    2 stmt_list: stmt_list . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    $default  reduce using rule 1 (prog)

    stmt                   go to state 24
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 3

    0 $accept: prog $end .

    $default  accept


State 4

   28 type: INT .

    $default  reduce using rule 28 (type)


State 5

   29 type: FLOAT .

    $default  reduce using rule 29 (type)


State 6

   30 type: VOID .

    $default  reduce using rule 30 (type)


State 7

   33 if_condition: IF . LB assignment RB

    LB  shift, and go to state 48


State 8

   37 for_condition: FOR . LB assignment SEMI assignment SEMI assignment RB

    LB  shift, and go to state 49


State 9

   36 while_condition: WHILE . LB assignment RB

    LB  shift, and go to state 50


State 10

    6 stmt: BREAK . SEMI

    SEMI  shift, and go to state 51


State 11

    7 stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 52


State 12

   39 switch_case_statement: SWITCH . LB operation RB LCURLY case_statement_block RCURLY

    LB  shift, and go to state 53


State 13

    4 stmt: RETURN . SEMI
    5     | RETURN . bool_conditions SEMI

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 54
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    bool_conditions   go to state 55
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 14

   70 unary_expression: MINUS . unary_expression

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    unary_expression  go to state 57
    expression        go to state 45
    id_array          go to state 56


State 15

   69 unary_expression: NOT . unary_expression

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    unary_expression  go to state 58
    expression        go to state 45
    id_array          go to state 56


State 16

   15 stmt: SEMI .

    $default  reduce using rule 15 (stmt)


State 17

   76 expression: LB . bool_conditions RB

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    bool_conditions   go to state 59
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 18

   81 left_curly: LCURLY .

    $default  reduce using rule 81 (left_curly)


State 19

   72 unary_expression: INCREMENT . unary_expression

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    unary_expression  go to state 60
    expression        go to state 45
    id_array          go to state 56


State 20

   71 unary_expression: DECREMENT . unary_expression

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    unary_expression  go to state 61
    expression        go to state 45
    id_array          go to state 56


State 21

   79 id_array: ID .
   80         | ID . LSQ NUM_INT RSQ

    LSQ  shift, and go to state 62

    $default  reduce using rule 79 (id_array)


State 22

   74 expression: NUM_INT .

    $default  reduce using rule 74 (expression)


State 23

   73 expression: NUM_FLOAT .

    $default  reduce using rule 73 (expression)


State 24

    2 stmt_list: stmt_list stmt .

    $default  reduce using rule 2 (stmt_list)


State 25

    8 stmt: var_dec . SEMI

    SEMI  shift, and go to state 63


State 26

    9 stmt: func_dec .

    $default  reduce using rule 9 (stmt)


State 27

   19 func_dec: func_header . left_curly stmt_list right_curly

    LCURLY  shift, and go to state 18

    left_curly  go to state 64


State 28

   20 func_header: func_type_id . LB func_params RB

    LB  shift, and go to state 65


State 29

   16 var_dec: type . var_list
   21 func_type_id: type . ID

    ID  shift, and go to state 66

    var_list       go to state 67
    decl_id_array  go to state 68


State 30

   10 stmt: if_block .

    $default  reduce using rule 10 (stmt)


State 31

   31 if_block: if_condition . stmt ELSE stmt
   32         | if_condition . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 69
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 32

   11 stmt: loop_block .

    $default  reduce using rule 11 (stmt)


State 33

   34 loop_block: while_condition . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 70
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 34

   35 loop_block: for_condition . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 71
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 35

   12 stmt: stmt_block .

    $default  reduce using rule 12 (stmt)


State 36

   13 stmt: switch_case_statement .

    $default  reduce using rule 13 (stmt)


State 37

   14 stmt: assignment . SEMI

    SEMI  shift, and go to state 72


State 38

   49 assignment: bool_conditions .
   50 bool_conditions: bool_conditions . AND condition
   51                | bool_conditions . OR condition

    OR   shift, and go to state 73
    AND  shift, and go to state 74

    $default  reduce using rule 49 (assignment)


State 39

   52 bool_conditions: condition .

    $default  reduce using rule 52 (bool_conditions)


State 40

   53 condition: comparison .

    $default  reduce using rule 53 (condition)


State 41

   54 condition: operation .
   55 comparison: operation . GT operation
   56           | operation . GTE operation
   57           | operation . LT operation
   58           | operation . LTE operation
   59           | operation . EQ operation
   60           | operation . NEQ operation
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    LT     shift, and go to state 77
    GT     shift, and go to state 78
    LTE    shift, and go to state 79
    GTE    shift, and go to state 80
    EQ     shift, and go to state 81
    NEQ    shift, and go to state 82

    $default  reduce using rule 54 (condition)


State 42

   63 operation: term .
   64 term: term . MULTIPLY factor
   65     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 83
    DIVIDE    shift, and go to state 84

    $default  reduce using rule 63 (operation)


State 43

   66 term: factor .

    $default  reduce using rule 66 (term)


State 44

   67 factor: unary_expression .

    $default  reduce using rule 67 (factor)


State 45

   68 unary_expression: expression .

    $default  reduce using rule 68 (unary_expression)


State 46

   48 assignment: id_array . ASSIGN bool_conditions
   75 expression: id_array .

    ASSIGN  shift, and go to state 85

    $default  reduce using rule 75 (expression)


State 47

   38 stmt_block: left_curly . stmt_list right_curly

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 86


State 48

   33 if_condition: IF LB . assignment RB

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    assignment        go to state 87
    bool_conditions   go to state 38
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 46


State 49

   37 for_condition: FOR LB . assignment SEMI assignment SEMI assignment RB

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    assignment        go to state 88
    bool_conditions   go to state 38
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 46


State 50

   36 while_condition: WHILE LB . assignment RB

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    assignment        go to state 89
    bool_conditions   go to state 38
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 46


State 51

    6 stmt: BREAK SEMI .

    $default  reduce using rule 6 (stmt)


State 52

    7 stmt: CONTINUE SEMI .

    $default  reduce using rule 7 (stmt)


State 53

   39 switch_case_statement: SWITCH LB . operation RB LCURLY case_statement_block RCURLY

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 90
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 54

    4 stmt: RETURN SEMI .

    $default  reduce using rule 4 (stmt)


State 55

    5 stmt: RETURN bool_conditions . SEMI
   50 bool_conditions: bool_conditions . AND condition
   51                | bool_conditions . OR condition

    OR    shift, and go to state 73
    AND   shift, and go to state 74
    SEMI  shift, and go to state 91


State 56

   75 expression: id_array .

    $default  reduce using rule 75 (expression)


State 57

   70 unary_expression: MINUS unary_expression .

    $default  reduce using rule 70 (unary_expression)


State 58

   69 unary_expression: NOT unary_expression .

    $default  reduce using rule 69 (unary_expression)


State 59

   50 bool_conditions: bool_conditions . AND condition
   51                | bool_conditions . OR condition
   76 expression: LB bool_conditions . RB

    OR   shift, and go to state 73
    AND  shift, and go to state 74
    RB   shift, and go to state 92


State 60

   72 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 72 (unary_expression)


State 61

   71 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 71 (unary_expression)


State 62

   80 id_array: ID LSQ . NUM_INT RSQ

    NUM_INT  shift, and go to state 93


State 63

    8 stmt: var_dec SEMI .

    $default  reduce using rule 8 (stmt)


State 64

   19 func_dec: func_header left_curly . stmt_list right_curly

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 94


State 65

   20 func_header: func_type_id LB . func_params RB

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 23 (func_params)

    func_params  go to state 95
    param_decl   go to state 96
    decl         go to state 97
    type         go to state 98


State 66

   21 func_type_id: type ID .
   77 decl_id_array: ID .
   78              | ID . LSQ NUM_INT RSQ

    LSQ  shift, and go to state 99

    LB        reduce using rule 21 (func_type_id)
    $default  reduce using rule 77 (decl_id_array)


State 67

   16 var_dec: type var_list .
   17 var_list: var_list . COMMA decl_id_array

    COMMA  shift, and go to state 100

    $default  reduce using rule 16 (var_dec)


State 68

   18 var_list: decl_id_array .

    $default  reduce using rule 18 (var_list)


State 69

   31 if_block: if_condition stmt . ELSE stmt
   32         | if_condition stmt .

    ELSE  shift, and go to state 101

    ELSE      [reduce using rule 32 (if_block)]
    $default  reduce using rule 32 (if_block)


State 70

   34 loop_block: while_condition stmt .

    $default  reduce using rule 34 (loop_block)


State 71

   35 loop_block: for_condition stmt .

    $default  reduce using rule 35 (loop_block)


State 72

   14 stmt: assignment SEMI .

    $default  reduce using rule 14 (stmt)


State 73

   51 bool_conditions: bool_conditions OR . condition

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    condition         go to state 102
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 74

   50 bool_conditions: bool_conditions AND . condition

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    condition         go to state 103
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 75

   61 operation: operation PLUS . term

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    term              go to state 104
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 76

   62 operation: operation MINUS . term

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    term              go to state 105
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 77

   57 comparison: operation LT . operation

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 106
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 78

   55 comparison: operation GT . operation

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 107
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 79

   58 comparison: operation LTE . operation

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 108
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 80

   56 comparison: operation GTE . operation

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 109
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 81

   59 comparison: operation EQ . operation

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 110
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 82

   60 comparison: operation NEQ . operation

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 111
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 83

   64 term: term MULTIPLY . factor

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    factor            go to state 112
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 84

   65 term: term DIVIDE . factor

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    factor            go to state 113
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 85

   48 assignment: id_array ASSIGN . bool_conditions

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    bool_conditions   go to state 114
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 86

    2 stmt_list: stmt_list . stmt
   38 stmt_block: left_curly stmt_list . right_curly

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    RCURLY     shift, and go to state 115
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 24
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47
    right_curly            go to state 116


State 87

   33 if_condition: IF LB assignment . RB

    RB  shift, and go to state 117


State 88

   37 for_condition: FOR LB assignment . SEMI assignment SEMI assignment RB

    SEMI  shift, and go to state 118


State 89

   36 while_condition: WHILE LB assignment . RB

    RB  shift, and go to state 119


State 90

   39 switch_case_statement: SWITCH LB operation . RB LCURLY case_statement_block RCURLY
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    RB     shift, and go to state 120


State 91

    5 stmt: RETURN bool_conditions SEMI .

    $default  reduce using rule 5 (stmt)


State 92

   76 expression: LB bool_conditions RB .

    $default  reduce using rule 76 (expression)


State 93

   80 id_array: ID LSQ NUM_INT . RSQ

    RSQ  shift, and go to state 121


State 94

    2 stmt_list: stmt_list . stmt
   19 func_dec: func_header left_curly stmt_list . right_curly

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    RCURLY     shift, and go to state 115
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 24
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47
    right_curly            go to state 122


State 95

   20 func_header: func_type_id LB func_params . RB

    RB  shift, and go to state 123


State 96

   22 func_params: param_decl .
   24 param_decl: param_decl . COMMA decl

    COMMA  shift, and go to state 124

    $default  reduce using rule 22 (func_params)


State 97

   25 param_decl: decl .

    $default  reduce using rule 25 (param_decl)


State 98

   26 decl: type . ID
   27     | type . ID LSQ RSQ

    ID  shift, and go to state 125


State 99

   78 decl_id_array: ID LSQ . NUM_INT RSQ

    NUM_INT  shift, and go to state 126


State 100

   17 var_list: var_list COMMA . decl_id_array

    ID  shift, and go to state 127

    decl_id_array  go to state 128


State 101

   31 if_block: if_condition stmt ELSE . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 129
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 102

   51 bool_conditions: bool_conditions OR condition .

    $default  reduce using rule 51 (bool_conditions)


State 103

   50 bool_conditions: bool_conditions AND condition .

    $default  reduce using rule 50 (bool_conditions)


State 104

   61 operation: operation PLUS term .
   64 term: term . MULTIPLY factor
   65     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 83
    DIVIDE    shift, and go to state 84

    $default  reduce using rule 61 (operation)


State 105

   62 operation: operation MINUS term .
   64 term: term . MULTIPLY factor
   65     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 83
    DIVIDE    shift, and go to state 84

    $default  reduce using rule 62 (operation)


State 106

   57 comparison: operation LT operation .
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 57 (comparison)


State 107

   55 comparison: operation GT operation .
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 55 (comparison)


State 108

   58 comparison: operation LTE operation .
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 58 (comparison)


State 109

   56 comparison: operation GTE operation .
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 56 (comparison)


State 110

   59 comparison: operation EQ operation .
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 59 (comparison)


State 111

   60 comparison: operation NEQ operation .
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 60 (comparison)


State 112

   64 term: term MULTIPLY factor .

    $default  reduce using rule 64 (term)


State 113

   65 term: term DIVIDE factor .

    $default  reduce using rule 65 (term)


State 114

   48 assignment: id_array ASSIGN bool_conditions .
   50 bool_conditions: bool_conditions . AND condition
   51                | bool_conditions . OR condition

    OR   shift, and go to state 73
    AND  shift, and go to state 74

    $default  reduce using rule 48 (assignment)


State 115

   82 right_curly: RCURLY .

    $default  reduce using rule 82 (right_curly)


State 116

   38 stmt_block: left_curly stmt_list right_curly .

    $default  reduce using rule 38 (stmt_block)


State 117

   33 if_condition: IF LB assignment RB .

    $default  reduce using rule 33 (if_condition)


State 118

   37 for_condition: FOR LB assignment SEMI . assignment SEMI assignment RB

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    assignment        go to state 130
    bool_conditions   go to state 38
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 46


State 119

   36 while_condition: WHILE LB assignment RB .

    $default  reduce using rule 36 (while_condition)


State 120

   39 switch_case_statement: SWITCH LB operation RB . LCURLY case_statement_block RCURLY

    LCURLY  shift, and go to state 131


State 121

   80 id_array: ID LSQ NUM_INT RSQ .

    $default  reduce using rule 80 (id_array)


State 122

   19 func_dec: func_header left_curly stmt_list right_curly .

    $default  reduce using rule 19 (func_dec)


State 123

   20 func_header: func_type_id LB func_params RB .

    $default  reduce using rule 20 (func_header)


State 124

   24 param_decl: param_decl COMMA . decl

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    decl  go to state 132
    type  go to state 98


State 125

   26 decl: type ID .
   27     | type ID . LSQ RSQ

    LSQ  shift, and go to state 133

    $default  reduce using rule 26 (decl)


State 126

   78 decl_id_array: ID LSQ NUM_INT . RSQ

    RSQ  shift, and go to state 134


State 127

   77 decl_id_array: ID .
   78              | ID . LSQ NUM_INT RSQ

    LSQ  shift, and go to state 99

    $default  reduce using rule 77 (decl_id_array)


State 128

   17 var_list: var_list COMMA decl_id_array .

    $default  reduce using rule 17 (var_list)


State 129

   31 if_block: if_condition stmt ELSE stmt .

    $default  reduce using rule 31 (if_block)


State 130

   37 for_condition: FOR LB assignment SEMI assignment . SEMI assignment RB

    SEMI  shift, and go to state 135


State 131

   39 switch_case_statement: SWITCH LB operation RB LCURLY . case_statement_block RCURLY

    CASE  shift, and go to state 136

    case_statement_block  go to state 137
    case_list             go to state 138
    case_statement        go to state 139


State 132

   24 param_decl: param_decl COMMA decl .

    $default  reduce using rule 24 (param_decl)


State 133

   27 decl: type ID LSQ . RSQ

    RSQ  shift, and go to state 140


State 134

   78 decl_id_array: ID LSQ NUM_INT RSQ .

    $default  reduce using rule 78 (decl_id_array)


State 135

   37 for_condition: FOR LB assignment SEMI assignment SEMI . assignment RB

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    assignment        go to state 141
    bool_conditions   go to state 38
    condition         go to state 39
    comparison        go to state 40
    operation         go to state 41
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 46


State 136

   44 case_statement: CASE . c operation COLON d d stmt

    $default  reduce using rule 45 (c)

    c  go to state 142


State 137

   39 switch_case_statement: SWITCH LB operation RB LCURLY case_statement_block . RCURLY

    RCURLY  shift, and go to state 143


State 138

   40 case_statement_block: case_list . default_statemnt
   41                     | case_list .
   42 case_list: case_list . case_statement

    CASE     shift, and go to state 136
    DEFAULT  shift, and go to state 144

    $default  reduce using rule 41 (case_statement_block)

    case_statement    go to state 145
    default_statemnt  go to state 146


State 139

   43 case_list: case_statement .

    $default  reduce using rule 43 (case_list)


State 140

   27 decl: type ID LSQ RSQ .

    $default  reduce using rule 27 (decl)


State 141

   37 for_condition: FOR LB assignment SEMI assignment SEMI assignment . RB

    RB  shift, and go to state 147


State 142

   44 case_statement: CASE c . operation COLON d d stmt

    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    LB         shift, and go to state 17
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    operation         go to state 148
    term              go to state 42
    factor            go to state 43
    unary_expression  go to state 44
    expression        go to state 45
    id_array          go to state 56


State 143

   39 switch_case_statement: SWITCH LB operation RB LCURLY case_statement_block RCURLY .

    $default  reduce using rule 39 (switch_case_statement)


State 144

   47 default_statemnt: DEFAULT . COLON c stmt

    COLON  shift, and go to state 149


State 145

   42 case_list: case_list case_statement .

    $default  reduce using rule 42 (case_list)


State 146

   40 case_statement_block: case_list default_statemnt .

    $default  reduce using rule 40 (case_statement_block)


State 147

   37 for_condition: FOR LB assignment SEMI assignment SEMI assignment RB .

    $default  reduce using rule 37 (for_condition)


State 148

   44 case_statement: CASE c operation . COLON d d stmt
   61 operation: operation . PLUS term
   62          | operation . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    COLON  shift, and go to state 150


State 149

   47 default_statemnt: DEFAULT COLON . c stmt

    $default  reduce using rule 45 (c)

    c  go to state 151


State 150

   44 case_statement: CASE c operation COLON . d d stmt

    $default  reduce using rule 46 (d)

    d  go to state 152


State 151

   47 default_statemnt: DEFAULT COLON c . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 153
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 152

   44 case_statement: CASE c operation COLON d . d stmt

    $default  reduce using rule 46 (d)

    d  go to state 154


State 153

   47 default_statemnt: DEFAULT COLON c stmt .

    $default  reduce using rule 47 (default_statemnt)


State 154

   44 case_statement: CASE c operation COLON d d . stmt

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    VOID       shift, and go to state 6
    IF         shift, and go to state 7
    FOR        shift, and go to state 8
    WHILE      shift, and go to state 9
    BREAK      shift, and go to state 10
    CONTINUE   shift, and go to state 11
    SWITCH     shift, and go to state 12
    RETURN     shift, and go to state 13
    MINUS      shift, and go to state 14
    NOT        shift, and go to state 15
    SEMI       shift, and go to state 16
    LB         shift, and go to state 17
    LCURLY     shift, and go to state 18
    INCREMENT  shift, and go to state 19
    DECREMENT  shift, and go to state 20
    ID         shift, and go to state 21
    NUM_INT    shift, and go to state 22
    NUM_FLOAT  shift, and go to state 23

    stmt                   go to state 155
    var_dec                go to state 25
    func_dec               go to state 26
    func_header            go to state 27
    func_type_id           go to state 28
    type                   go to state 29
    if_block               go to state 30
    if_condition           go to state 31
    loop_block             go to state 32
    while_condition        go to state 33
    for_condition          go to state 34
    stmt_block             go to state 35
    switch_case_statement  go to state 36
    assignment             go to state 37
    bool_conditions        go to state 38
    condition              go to state 39
    comparison             go to state 40
    operation              go to state 41
    term                   go to state 42
    factor                 go to state 43
    unary_expression       go to state 44
    expression             go to state 45
    id_array               go to state 46
    left_curly             go to state 47


State 155

   44 case_statement: CASE c operation COLON d d stmt .

    $default  reduce using rule 44 (case_statement)
