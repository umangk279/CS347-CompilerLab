Terminals unused in grammar

   PRINT
   MOD


State 72 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt_list d stmt
    3          | %empty

    4 stmt: RETURN SEMI
    5     | RETURN bool_conditions SEMI
    6     | BREAK SEMI
    7     | CONTINUE SEMI
    8     | var_dec SEMI
    9     | func_dec
   10     | if_block
   11     | loop_block
   12     | stmt_block
   13     | switch_case_statement
   14     | assignment SEMI
   15     | SEMI

   16 var_dec: type var_list

   17 var_list: var_list COMMA decl_id_array
   18         | decl_id_array

   19 func_dec: func_header left_curly stmt_list right_curly

   20 $@1: %empty

   21 func_header: func_type_id $@1 LB func_params RB

   22 func_type_id: type ID

   23 func_params: param_decl
   24            | %empty

   25 param_decl: param_decl COMMA decl
   26           | decl

   27 decl: type ID
   28     | type ID LSQ RSQ

   29 type: INT
   30     | FLOAT
   31     | VOID

   32 if_block: if_condition stmt ELSE n d stmt
   33         | if_condition stmt

   34 if_condition: IF LB assignment RB

   35 loop_block: while_condition stmt
   36           | forexp d assignment d d RB stmt

   37 while_condition: WHILE d LB assignment RB

   38 forexp: FOR LB assignment SEMI d assignment SEMI

   39 stmt_block: left_curly stmt_list right_curly

   40 switch_case_statement: SWITCH LB operation RB LCURLY case_statement_block RCURLY

   41 case_statement_block: case_list default_statemnt
   42                     | case_list

   43 case_list: case_list case_statement
   44          | case_statement

   45 case_statement: CASE c operation COLON d d stmt

   46 c: %empty

   47 d: %empty

   48 n: %empty

   49 default_statemnt: DEFAULT COLON c stmt

   50 assignment: id_array ASSIGN bool_conditions
   51           | bool_conditions

   52 bool_conditions: bool_conditions AND condition
   53                | bool_conditions OR condition
   54                | condition

   55 condition: comparison
   56          | operation

   57 comparison: operation GT operation
   58           | operation GTE operation
   59           | operation LT operation
   60           | operation LTE operation
   61           | operation EQ operation
   62           | operation NEQ operation

   63 operation: operation PLUS term
   64          | operation MINUS term
   65          | term

   66 term: term MULTIPLY factor
   67     | term DIVIDE factor
   68     | factor

   69 factor: unary_expression

   70 unary_expression: expression
   71                 | NOT unary_expression
   72                 | MINUS unary_expression
   73                 | DECREMENT unary_expression
   74                 | INCREMENT unary_expression

   75 expression: NUM_FLOAT
   76           | NUM_INT
   77           | id_array
   78           | LB bool_conditions RB
   79           | function_call

   80 function_call: ID LB plist RB

   81 plist: plist_list
   82      | %empty

   83 plist_list: plist_list COMMA condition
   84           | condition

   85 decl_id_array: ID
   86              | ID LSQ NUM_INT RSQ

   87 id_array: ID
   88         | ID LSQ NUM_INT RSQ

   89 left_curly: LCURLY

   90 right_curly: RCURLY


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 29
FLOAT (259) 30
VOID (260) 31
IF (261) 34
ELSE (262) 32
FOR (263) 38
WHILE (264) 37
BREAK (265) 6
CONTINUE (266) 7
SWITCH (267) 40
CASE (268) 45
DEFAULT (269) 49
RETURN (270) 4 5
PRINT (271)
PLUS (272) 63
MINUS (273) 64 72
MULTIPLY (274) 66
DIVIDE (275) 67
MOD (276)
ASSIGN (277) 50
OR (278) 53
AND (279) 52
NOT (280) 71
SEMI (281) 4 5 6 7 8 14 15 38
COMMA (282) 17 25 83
COLON (283) 45 49
LT (284) 59
GT (285) 57
LTE (286) 60
GTE (287) 58
EQ (288) 61
NEQ (289) 62
LB (290) 21 34 37 38 40 78 80
RB (291) 21 34 36 37 40 78 80
LSQ (292) 28 86 88
RSQ (293) 28 86 88
LCURLY (294) 40 89
RCURLY (295) 40 90
INCREMENT (296) 74
DECREMENT (297) 73
ID (298) 22 27 28 80 85 86 87 88
NUM_INT (299) 76 86 88
NUM_FLOAT (300) 75


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
prog (47)
    on left: 1, on right: 0
stmt_list (48)
    on left: 2 3, on right: 1 2 19 39
stmt (49)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15, on right: 2 32 33 35 36
    45 49
var_dec (50)
    on left: 16, on right: 8
var_list (51)
    on left: 17 18, on right: 16 17
func_dec (52)
    on left: 19, on right: 9
func_header (53)
    on left: 21, on right: 19
$@1 (54)
    on left: 20, on right: 21
func_type_id (55)
    on left: 22, on right: 21
func_params (56)
    on left: 23 24, on right: 21
param_decl (57)
    on left: 25 26, on right: 23 25
decl (58)
    on left: 27 28, on right: 25 26
type (59)
    on left: 29 30 31, on right: 16 22 27 28
if_block (60)
    on left: 32 33, on right: 10
if_condition (61)
    on left: 34, on right: 32 33
loop_block (62)
    on left: 35 36, on right: 11
while_condition (63)
    on left: 37, on right: 35
forexp (64)
    on left: 38, on right: 36
stmt_block (65)
    on left: 39, on right: 12
switch_case_statement (66)
    on left: 40, on right: 13
case_statement_block (67)
    on left: 41 42, on right: 40
case_list (68)
    on left: 43 44, on right: 41 42 43
case_statement (69)
    on left: 45, on right: 43 44
c (70)
    on left: 46, on right: 45 49
d (71)
    on left: 47, on right: 2 32 36 37 38 45
n (72)
    on left: 48, on right: 32
default_statemnt (73)
    on left: 49, on right: 41
assignment (74)
    on left: 50 51, on right: 14 34 36 37 38
bool_conditions (75)
    on left: 52 53 54, on right: 5 50 51 52 53 78
condition (76)
    on left: 55 56, on right: 52 53 54 83 84
comparison (77)
    on left: 57 58 59 60 61 62, on right: 55
operation (78)
    on left: 63 64 65, on right: 40 45 56 57 58 59 60 61 62 63 64
term (79)
    on left: 66 67 68, on right: 63 64 65 66 67
factor (80)
    on left: 69, on right: 66 67 68
unary_expression (81)
    on left: 70 71 72 73 74, on right: 69 71 72 73 74
expression (82)
    on left: 75 76 77 78 79, on right: 70
function_call (83)
    on left: 80, on right: 79
plist (84)
    on left: 81 82, on right: 80
plist_list (85)
    on left: 83 84, on right: 81 83
decl_id_array (86)
    on left: 85 86, on right: 17 18
id_array (87)
    on left: 87 88, on right: 50 77
left_curly (88)
    on left: 89, on right: 19 39
right_curly (89)
    on left: 90, on right: 19 39


State 0

    0 $accept: . prog $end

    $default  reduce using rule 3 (stmt_list)

    prog       go to state 1
    stmt_list  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: stmt_list .
    2 stmt_list: stmt_list . d stmt

    $end      reduce using rule 1 (prog)
    $default  reduce using rule 47 (d)

    d  go to state 4


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    2 stmt_list: stmt_list d . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 25
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 5

   29 type: INT .

    $default  reduce using rule 29 (type)


State 6

   30 type: FLOAT .

    $default  reduce using rule 30 (type)


State 7

   31 type: VOID .

    $default  reduce using rule 31 (type)


State 8

   34 if_condition: IF . LB assignment RB

    LB  shift, and go to state 50


State 9

   38 forexp: FOR . LB assignment SEMI d assignment SEMI

    LB  shift, and go to state 51


State 10

   37 while_condition: WHILE . d LB assignment RB

    $default  reduce using rule 47 (d)

    d  go to state 52


State 11

    6 stmt: BREAK . SEMI

    SEMI  shift, and go to state 53


State 12

    7 stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 54


State 13

   40 switch_case_statement: SWITCH . LB operation RB LCURLY case_statement_block RCURLY

    LB  shift, and go to state 55


State 14

    4 stmt: RETURN . SEMI
    5     | RETURN . bool_conditions SEMI

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 56
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    bool_conditions   go to state 57
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 15

   72 unary_expression: MINUS . unary_expression

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    unary_expression  go to state 59
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 16

   71 unary_expression: NOT . unary_expression

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    unary_expression  go to state 60
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 17

   15 stmt: SEMI .

    $default  reduce using rule 15 (stmt)


State 18

   78 expression: LB . bool_conditions RB

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    bool_conditions   go to state 61
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 19

   89 left_curly: LCURLY .

    $default  reduce using rule 89 (left_curly)


State 20

   74 unary_expression: INCREMENT . unary_expression

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    unary_expression  go to state 62
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 21

   73 unary_expression: DECREMENT . unary_expression

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    unary_expression  go to state 63
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 22

   80 function_call: ID . LB plist RB
   87 id_array: ID .
   88         | ID . LSQ NUM_INT RSQ

    LB   shift, and go to state 64
    LSQ  shift, and go to state 65

    $default  reduce using rule 87 (id_array)


State 23

   76 expression: NUM_INT .

    $default  reduce using rule 76 (expression)


State 24

   75 expression: NUM_FLOAT .

    $default  reduce using rule 75 (expression)


State 25

    2 stmt_list: stmt_list d stmt .

    $default  reduce using rule 2 (stmt_list)


State 26

    8 stmt: var_dec . SEMI

    SEMI  shift, and go to state 66


State 27

    9 stmt: func_dec .

    $default  reduce using rule 9 (stmt)


State 28

   19 func_dec: func_header . left_curly stmt_list right_curly

    LCURLY  shift, and go to state 19

    left_curly  go to state 67


State 29

   21 func_header: func_type_id . $@1 LB func_params RB

    $default  reduce using rule 20 ($@1)

    $@1  go to state 68


State 30

   16 var_dec: type . var_list
   22 func_type_id: type . ID

    ID  shift, and go to state 69

    var_list       go to state 70
    decl_id_array  go to state 71


State 31

   10 stmt: if_block .

    $default  reduce using rule 10 (stmt)


State 32

   32 if_block: if_condition . stmt ELSE n d stmt
   33         | if_condition . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 72
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 33

   11 stmt: loop_block .

    $default  reduce using rule 11 (stmt)


State 34

   35 loop_block: while_condition . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 73
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 35

   36 loop_block: forexp . d assignment d d RB stmt

    $default  reduce using rule 47 (d)

    d  go to state 74


State 36

   12 stmt: stmt_block .

    $default  reduce using rule 12 (stmt)


State 37

   13 stmt: switch_case_statement .

    $default  reduce using rule 13 (stmt)


State 38

   14 stmt: assignment . SEMI

    SEMI  shift, and go to state 75


State 39

   51 assignment: bool_conditions .
   52 bool_conditions: bool_conditions . AND condition
   53                | bool_conditions . OR condition

    OR   shift, and go to state 76
    AND  shift, and go to state 77

    $default  reduce using rule 51 (assignment)


State 40

   54 bool_conditions: condition .

    $default  reduce using rule 54 (bool_conditions)


State 41

   55 condition: comparison .

    $default  reduce using rule 55 (condition)


State 42

   56 condition: operation .
   57 comparison: operation . GT operation
   58           | operation . GTE operation
   59           | operation . LT operation
   60           | operation . LTE operation
   61           | operation . EQ operation
   62           | operation . NEQ operation
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    LT     shift, and go to state 80
    GT     shift, and go to state 81
    LTE    shift, and go to state 82
    GTE    shift, and go to state 83
    EQ     shift, and go to state 84
    NEQ    shift, and go to state 85

    $default  reduce using rule 56 (condition)


State 43

   65 operation: term .
   66 term: term . MULTIPLY factor
   67     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 86
    DIVIDE    shift, and go to state 87

    $default  reduce using rule 65 (operation)


State 44

   68 term: factor .

    $default  reduce using rule 68 (term)


State 45

   69 factor: unary_expression .

    $default  reduce using rule 69 (factor)


State 46

   70 unary_expression: expression .

    $default  reduce using rule 70 (unary_expression)


State 47

   79 expression: function_call .

    $default  reduce using rule 79 (expression)


State 48

   50 assignment: id_array . ASSIGN bool_conditions
   77 expression: id_array .

    ASSIGN  shift, and go to state 88

    $default  reduce using rule 77 (expression)


State 49

   39 stmt_block: left_curly . stmt_list right_curly

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 89


State 50

   34 if_condition: IF LB . assignment RB

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    assignment        go to state 90
    bool_conditions   go to state 39
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 48


State 51

   38 forexp: FOR LB . assignment SEMI d assignment SEMI

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    assignment        go to state 91
    bool_conditions   go to state 39
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 48


State 52

   37 while_condition: WHILE d . LB assignment RB

    LB  shift, and go to state 92


State 53

    6 stmt: BREAK SEMI .

    $default  reduce using rule 6 (stmt)


State 54

    7 stmt: CONTINUE SEMI .

    $default  reduce using rule 7 (stmt)


State 55

   40 switch_case_statement: SWITCH LB . operation RB LCURLY case_statement_block RCURLY

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 93
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 56

    4 stmt: RETURN SEMI .

    $default  reduce using rule 4 (stmt)


State 57

    5 stmt: RETURN bool_conditions . SEMI
   52 bool_conditions: bool_conditions . AND condition
   53                | bool_conditions . OR condition

    OR    shift, and go to state 76
    AND   shift, and go to state 77
    SEMI  shift, and go to state 94


State 58

   77 expression: id_array .

    $default  reduce using rule 77 (expression)


State 59

   72 unary_expression: MINUS unary_expression .

    $default  reduce using rule 72 (unary_expression)


State 60

   71 unary_expression: NOT unary_expression .

    $default  reduce using rule 71 (unary_expression)


State 61

   52 bool_conditions: bool_conditions . AND condition
   53                | bool_conditions . OR condition
   78 expression: LB bool_conditions . RB

    OR   shift, and go to state 76
    AND  shift, and go to state 77
    RB   shift, and go to state 95


State 62

   74 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 74 (unary_expression)


State 63

   73 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 73 (unary_expression)


State 64

   80 function_call: ID LB . plist RB

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    $default  reduce using rule 82 (plist)

    condition         go to state 96
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    plist             go to state 97
    plist_list        go to state 98
    id_array          go to state 58


State 65

   88 id_array: ID LSQ . NUM_INT RSQ

    NUM_INT  shift, and go to state 99


State 66

    8 stmt: var_dec SEMI .

    $default  reduce using rule 8 (stmt)


State 67

   19 func_dec: func_header left_curly . stmt_list right_curly

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 100


State 68

   21 func_header: func_type_id $@1 . LB func_params RB

    LB  shift, and go to state 101


State 69

   22 func_type_id: type ID .
   85 decl_id_array: ID .
   86              | ID . LSQ NUM_INT RSQ

    LSQ  shift, and go to state 102

    LB        reduce using rule 22 (func_type_id)
    $default  reduce using rule 85 (decl_id_array)


State 70

   16 var_dec: type var_list .
   17 var_list: var_list . COMMA decl_id_array

    COMMA  shift, and go to state 103

    $default  reduce using rule 16 (var_dec)


State 71

   18 var_list: decl_id_array .

    $default  reduce using rule 18 (var_list)


State 72

   32 if_block: if_condition stmt . ELSE n d stmt
   33         | if_condition stmt .

    ELSE  shift, and go to state 104

    ELSE      [reduce using rule 33 (if_block)]
    $default  reduce using rule 33 (if_block)


State 73

   35 loop_block: while_condition stmt .

    $default  reduce using rule 35 (loop_block)


State 74

   36 loop_block: forexp d . assignment d d RB stmt

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    assignment        go to state 105
    bool_conditions   go to state 39
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 48


State 75

   14 stmt: assignment SEMI .

    $default  reduce using rule 14 (stmt)


State 76

   53 bool_conditions: bool_conditions OR . condition

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    condition         go to state 106
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 77

   52 bool_conditions: bool_conditions AND . condition

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    condition         go to state 107
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 78

   63 operation: operation PLUS . term

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    term              go to state 108
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 79

   64 operation: operation MINUS . term

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    term              go to state 109
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 80

   59 comparison: operation LT . operation

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 110
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 81

   57 comparison: operation GT . operation

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 111
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 82

   60 comparison: operation LTE . operation

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 112
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 83

   58 comparison: operation GTE . operation

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 113
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 84

   61 comparison: operation EQ . operation

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 114
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 85

   62 comparison: operation NEQ . operation

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 115
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 86

   66 term: term MULTIPLY . factor

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    factor            go to state 116
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 87

   67 term: term DIVIDE . factor

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    factor            go to state 117
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 88

   50 assignment: id_array ASSIGN . bool_conditions

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    bool_conditions   go to state 118
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 89

    2 stmt_list: stmt_list . d stmt
   39 stmt_block: left_curly stmt_list . right_curly

    RCURLY  shift, and go to state 119

    $default  reduce using rule 47 (d)

    d            go to state 4
    right_curly  go to state 120


State 90

   34 if_condition: IF LB assignment . RB

    RB  shift, and go to state 121


State 91

   38 forexp: FOR LB assignment . SEMI d assignment SEMI

    SEMI  shift, and go to state 122


State 92

   37 while_condition: WHILE d LB . assignment RB

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    assignment        go to state 123
    bool_conditions   go to state 39
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 48


State 93

   40 switch_case_statement: SWITCH LB operation . RB LCURLY case_statement_block RCURLY
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    RB     shift, and go to state 124


State 94

    5 stmt: RETURN bool_conditions SEMI .

    $default  reduce using rule 5 (stmt)


State 95

   78 expression: LB bool_conditions RB .

    $default  reduce using rule 78 (expression)


State 96

   84 plist_list: condition .

    $default  reduce using rule 84 (plist_list)


State 97

   80 function_call: ID LB plist . RB

    RB  shift, and go to state 125


State 98

   81 plist: plist_list .
   83 plist_list: plist_list . COMMA condition

    COMMA  shift, and go to state 126

    $default  reduce using rule 81 (plist)


State 99

   88 id_array: ID LSQ NUM_INT . RSQ

    RSQ  shift, and go to state 127


State 100

    2 stmt_list: stmt_list . d stmt
   19 func_dec: func_header left_curly stmt_list . right_curly

    RCURLY  shift, and go to state 119

    $default  reduce using rule 47 (d)

    d            go to state 4
    right_curly  go to state 128


State 101

   21 func_header: func_type_id $@1 LB . func_params RB

    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6
    VOID   shift, and go to state 7

    $default  reduce using rule 24 (func_params)

    func_params  go to state 129
    param_decl   go to state 130
    decl         go to state 131
    type         go to state 132


State 102

   86 decl_id_array: ID LSQ . NUM_INT RSQ

    NUM_INT  shift, and go to state 133


State 103

   17 var_list: var_list COMMA . decl_id_array

    ID  shift, and go to state 134

    decl_id_array  go to state 135


State 104

   32 if_block: if_condition stmt ELSE . n d stmt

    $default  reduce using rule 48 (n)

    n  go to state 136


State 105

   36 loop_block: forexp d assignment . d d RB stmt

    $default  reduce using rule 47 (d)

    d  go to state 137


State 106

   53 bool_conditions: bool_conditions OR condition .

    $default  reduce using rule 53 (bool_conditions)


State 107

   52 bool_conditions: bool_conditions AND condition .

    $default  reduce using rule 52 (bool_conditions)


State 108

   63 operation: operation PLUS term .
   66 term: term . MULTIPLY factor
   67     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 86
    DIVIDE    shift, and go to state 87

    $default  reduce using rule 63 (operation)


State 109

   64 operation: operation MINUS term .
   66 term: term . MULTIPLY factor
   67     | term . DIVIDE factor

    MULTIPLY  shift, and go to state 86
    DIVIDE    shift, and go to state 87

    $default  reduce using rule 64 (operation)


State 110

   59 comparison: operation LT operation .
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 59 (comparison)


State 111

   57 comparison: operation GT operation .
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 57 (comparison)


State 112

   60 comparison: operation LTE operation .
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 60 (comparison)


State 113

   58 comparison: operation GTE operation .
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 58 (comparison)


State 114

   61 comparison: operation EQ operation .
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 61 (comparison)


State 115

   62 comparison: operation NEQ operation .
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 62 (comparison)


State 116

   66 term: term MULTIPLY factor .

    $default  reduce using rule 66 (term)


State 117

   67 term: term DIVIDE factor .

    $default  reduce using rule 67 (term)


State 118

   50 assignment: id_array ASSIGN bool_conditions .
   52 bool_conditions: bool_conditions . AND condition
   53                | bool_conditions . OR condition

    OR   shift, and go to state 76
    AND  shift, and go to state 77

    $default  reduce using rule 50 (assignment)


State 119

   90 right_curly: RCURLY .

    $default  reduce using rule 90 (right_curly)


State 120

   39 stmt_block: left_curly stmt_list right_curly .

    $default  reduce using rule 39 (stmt_block)


State 121

   34 if_condition: IF LB assignment RB .

    $default  reduce using rule 34 (if_condition)


State 122

   38 forexp: FOR LB assignment SEMI . d assignment SEMI

    $default  reduce using rule 47 (d)

    d  go to state 138


State 123

   37 while_condition: WHILE d LB assignment . RB

    RB  shift, and go to state 139


State 124

   40 switch_case_statement: SWITCH LB operation RB . LCURLY case_statement_block RCURLY

    LCURLY  shift, and go to state 140


State 125

   80 function_call: ID LB plist RB .

    $default  reduce using rule 80 (function_call)


State 126

   83 plist_list: plist_list COMMA . condition

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    condition         go to state 141
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 127

   88 id_array: ID LSQ NUM_INT RSQ .

    $default  reduce using rule 88 (id_array)


State 128

   19 func_dec: func_header left_curly stmt_list right_curly .

    $default  reduce using rule 19 (func_dec)


State 129

   21 func_header: func_type_id $@1 LB func_params . RB

    RB  shift, and go to state 142


State 130

   23 func_params: param_decl .
   25 param_decl: param_decl . COMMA decl

    COMMA  shift, and go to state 143

    $default  reduce using rule 23 (func_params)


State 131

   26 param_decl: decl .

    $default  reduce using rule 26 (param_decl)


State 132

   27 decl: type . ID
   28     | type . ID LSQ RSQ

    ID  shift, and go to state 144


State 133

   86 decl_id_array: ID LSQ NUM_INT . RSQ

    RSQ  shift, and go to state 145


State 134

   85 decl_id_array: ID .
   86              | ID . LSQ NUM_INT RSQ

    LSQ  shift, and go to state 102

    $default  reduce using rule 85 (decl_id_array)


State 135

   17 var_list: var_list COMMA decl_id_array .

    $default  reduce using rule 17 (var_list)


State 136

   32 if_block: if_condition stmt ELSE n . d stmt

    $default  reduce using rule 47 (d)

    d  go to state 146


State 137

   36 loop_block: forexp d assignment d . d RB stmt

    $default  reduce using rule 47 (d)

    d  go to state 147


State 138

   38 forexp: FOR LB assignment SEMI d . assignment SEMI

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    assignment        go to state 148
    bool_conditions   go to state 39
    condition         go to state 40
    comparison        go to state 41
    operation         go to state 42
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 48


State 139

   37 while_condition: WHILE d LB assignment RB .

    $default  reduce using rule 37 (while_condition)


State 140

   40 switch_case_statement: SWITCH LB operation RB LCURLY . case_statement_block RCURLY

    CASE  shift, and go to state 149

    case_statement_block  go to state 150
    case_list             go to state 151
    case_statement        go to state 152


State 141

   83 plist_list: plist_list COMMA condition .

    $default  reduce using rule 83 (plist_list)


State 142

   21 func_header: func_type_id $@1 LB func_params RB .

    $default  reduce using rule 21 (func_header)


State 143

   25 param_decl: param_decl COMMA . decl

    INT    shift, and go to state 5
    FLOAT  shift, and go to state 6
    VOID   shift, and go to state 7

    decl  go to state 153
    type  go to state 132


State 144

   27 decl: type ID .
   28     | type ID . LSQ RSQ

    LSQ  shift, and go to state 154

    $default  reduce using rule 27 (decl)


State 145

   86 decl_id_array: ID LSQ NUM_INT RSQ .

    $default  reduce using rule 86 (decl_id_array)


State 146

   32 if_block: if_condition stmt ELSE n d . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 155
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 147

   36 loop_block: forexp d assignment d d . RB stmt

    RB  shift, and go to state 156


State 148

   38 forexp: FOR LB assignment SEMI d assignment . SEMI

    SEMI  shift, and go to state 157


State 149

   45 case_statement: CASE . c operation COLON d d stmt

    $default  reduce using rule 46 (c)

    c  go to state 158


State 150

   40 switch_case_statement: SWITCH LB operation RB LCURLY case_statement_block . RCURLY

    RCURLY  shift, and go to state 159


State 151

   41 case_statement_block: case_list . default_statemnt
   42                     | case_list .
   43 case_list: case_list . case_statement

    CASE     shift, and go to state 149
    DEFAULT  shift, and go to state 160

    $default  reduce using rule 42 (case_statement_block)

    case_statement    go to state 161
    default_statemnt  go to state 162


State 152

   44 case_list: case_statement .

    $default  reduce using rule 44 (case_list)


State 153

   25 param_decl: param_decl COMMA decl .

    $default  reduce using rule 25 (param_decl)


State 154

   28 decl: type ID LSQ . RSQ

    RSQ  shift, and go to state 163


State 155

   32 if_block: if_condition stmt ELSE n d stmt .

    $default  reduce using rule 32 (if_block)


State 156

   36 loop_block: forexp d assignment d d RB . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 164
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 157

   38 forexp: FOR LB assignment SEMI d assignment SEMI .

    $default  reduce using rule 38 (forexp)


State 158

   45 case_statement: CASE c . operation COLON d d stmt

    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    LB         shift, and go to state 18
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    operation         go to state 165
    term              go to state 43
    factor            go to state 44
    unary_expression  go to state 45
    expression        go to state 46
    function_call     go to state 47
    id_array          go to state 58


State 159

   40 switch_case_statement: SWITCH LB operation RB LCURLY case_statement_block RCURLY .

    $default  reduce using rule 40 (switch_case_statement)


State 160

   49 default_statemnt: DEFAULT . COLON c stmt

    COLON  shift, and go to state 166


State 161

   43 case_list: case_list case_statement .

    $default  reduce using rule 43 (case_list)


State 162

   41 case_statement_block: case_list default_statemnt .

    $default  reduce using rule 41 (case_statement_block)


State 163

   28 decl: type ID LSQ RSQ .

    $default  reduce using rule 28 (decl)


State 164

   36 loop_block: forexp d assignment d d RB stmt .

    $default  reduce using rule 36 (loop_block)


State 165

   45 case_statement: CASE c operation . COLON d d stmt
   63 operation: operation . PLUS term
   64          | operation . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    COLON  shift, and go to state 167


State 166

   49 default_statemnt: DEFAULT COLON . c stmt

    $default  reduce using rule 46 (c)

    c  go to state 168


State 167

   45 case_statement: CASE c operation COLON . d d stmt

    $default  reduce using rule 47 (d)

    d  go to state 169


State 168

   49 default_statemnt: DEFAULT COLON c . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 170
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 169

   45 case_statement: CASE c operation COLON d . d stmt

    $default  reduce using rule 47 (d)

    d  go to state 171


State 170

   49 default_statemnt: DEFAULT COLON c stmt .

    $default  reduce using rule 49 (default_statemnt)


State 171

   45 case_statement: CASE c operation COLON d d . stmt

    INT        shift, and go to state 5
    FLOAT      shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    SWITCH     shift, and go to state 13
    RETURN     shift, and go to state 14
    MINUS      shift, and go to state 15
    NOT        shift, and go to state 16
    SEMI       shift, and go to state 17
    LB         shift, and go to state 18
    LCURLY     shift, and go to state 19
    INCREMENT  shift, and go to state 20
    DECREMENT  shift, and go to state 21
    ID         shift, and go to state 22
    NUM_INT    shift, and go to state 23
    NUM_FLOAT  shift, and go to state 24

    stmt                   go to state 172
    var_dec                go to state 26
    func_dec               go to state 27
    func_header            go to state 28
    func_type_id           go to state 29
    type                   go to state 30
    if_block               go to state 31
    if_condition           go to state 32
    loop_block             go to state 33
    while_condition        go to state 34
    forexp                 go to state 35
    stmt_block             go to state 36
    switch_case_statement  go to state 37
    assignment             go to state 38
    bool_conditions        go to state 39
    condition              go to state 40
    comparison             go to state 41
    operation              go to state 42
    term                   go to state 43
    factor                 go to state 44
    unary_expression       go to state 45
    expression             go to state 46
    function_call          go to state 47
    id_array               go to state 48
    left_curly             go to state 49


State 172

   45 case_statement: CASE c operation COLON d d stmt .

    $default  reduce using rule 45 (case_statement)
